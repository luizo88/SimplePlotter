<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SimplePlotterView"
        xmlns:oxy="http://oxyplot.org/wpf"
        x:Class="SimplePlotterView.MainWindow"
        mc:Ignorable="d"
        Title="SimplePlotter" Height="900" Width="1200" WindowState="Maximized" Icon="Resources/SimplePlotterIcon16x16.ico">
    <Window.Resources>
        <ResourceDictionary Source="pack://application:,,,/SimplePlotterView;component/WindowsResources/ResourceDictionary.xaml" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="23"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="400*"/>
        </Grid.ColumnDefinitions>
        <Menu Name="mainMenu" Margin="0,0,0,0" Grid.ColumnSpan="3">
            <MenuItem Name="menuFile" Header="{Binding Vocabulary.File, FallbackValue=File}">
                <MenuItem Name="menuOpen" Header="{Binding Vocabulary.Open, FallbackValue=Open}" Command="{Binding OpenFileCommand}">
                    <MenuItem.Icon>
                        <Image Source="Resources/Open.ico" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Name="menuSave" Header="{Binding Vocabulary.Save, FallbackValue=Save}" Command="{Binding SaveFileCommand}">
                    <MenuItem.Icon>
                        <Image Source="Resources/Save.ico" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Name="menuLanguage" Header="{Binding Vocabulary.Language, FallbackValue=Language}">
                <MenuItem Name="menuInterface" Header="{Binding Vocabulary.Interface, FallbackValue=Interface}" IsEnabled="True">
                    <MenuItem.Icon>
                        <Image Source="Resources/Language.ico" Height="16"/>
                    </MenuItem.Icon>
                    <MenuItem Name="menuIntPT" Header="PT" Command="{Binding InterfaceLanguageChangeCommand}" CommandParameter="0">
                        <MenuItem.Icon>
                            <Image Source="Resources/PT.ico" Height="16"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Name="menuIntES" Header="ES" Command="{Binding InterfaceLanguageChangeCommand}"  CommandParameter="1">
                        <MenuItem.Icon>
                            <Image Source="Resources/ES.ico" Height="16"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Name="menuIntEN" Header="EN" Command="{Binding InterfaceLanguageChangeCommand}"  CommandParameter="2">
                        <MenuItem.Icon>
                            <Image Source="Resources/EN.ico" Height="16"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </MenuItem>
            <MenuItem Name="menuOptions" Header="{Binding Vocabulary.Options, FallbackValue=Options}">
                <MenuItem Name="menuRestoreInitialConfig" Header="{Binding Vocabulary.RestoreInitialConfig, FallbackValue=RestoreInitialConfig}" Command="{Binding RestoreInitialConfig}">
                    <MenuItem.Icon>
                        <Image Source="Resources/Restore.ico" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Name="menuPlot" Header="{Binding Vocabulary.Plot, FallbackValue=Plot}">
                <MenuItem Name="menuCopyToClipboard" Header="{Binding Vocabulary.CopyPlotToClipboard, FallbackValue=CopyPlotToClipboard}" Command="{Binding CopyPlotToClipboard}">
                    <MenuItem.Icon>
                        <Image Source="Resources/Clipboard.ico" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Name="menuExportPlot" Header="{Binding Vocabulary.ExportPlot, FallbackValue=ExportPlot}" Command="{Binding ExportPlot}">
                    <MenuItem.Icon>
                        <Image Source="Resources/PNG.ico" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
        <Label Name="lblVersion" Content="{Binding Version, FallbackValue='v. x.X.X.X'}" HorizontalAlignment="Right" Grid.Column="2" Margin="0,0,0,0"/>
        <Expander Name="expd0" Margin="5,5,0,35" Grid.Row="1" Grid.Column="0" ExpandDirection="Right" IsExpanded="True">
            <ScrollViewer VerticalScrollBarVisibility="Auto" Margin="0,0,0,0" Grid.Row="1">
                <Grid Background="#FFF7FAFD" HorizontalAlignment="Left" Width="540">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Expander Name="ExpdDataSeries" Margin="10,10,10,10" Grid.Row="0" BorderBrush="DarkGray" IsExpanded="True">
                        <Expander.Header>
                            <DockPanel Width="495" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}, Mode=FindAncestor}}">
                                <DockPanel.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="DarkGray" Offset="1"/>
                                        <GradientStop Color="LightGray"/>
                                    </LinearGradientBrush>
                                </DockPanel.Background>
                                <TextBlock Name="txtDataSeries" Text="{Binding Vocabulary.DataSeries, FallbackValue=DataSeries}" FontWeight="Bold" HorizontalAlignment="Center"/>
                            </DockPanel>
                        </Expander.Header>
                        <Grid Height="400">
                            <Button Command="{Binding AddDataSeries}" Content="{Binding Vocabulary.AddDataSeries, FallbackValue=AddDataSeries}" HorizontalAlignment="Left" Margin="5,10,0,0" VerticalAlignment="Top" Width="150" Height="23"/>
                            <ListView Margin="5,40,10,0" ItemsSource="{Binding AvailableDataSeries}" SelectedItem="{Binding SelectedDataSeries, Mode=TwoWay}" Height="140" VerticalAlignment="Top" Grid.ColumnSpan="2" d:ItemsSource="{d:SampleData ItemCount=3}">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}">
                                        <Setter Property="Height" Value="Auto"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn x:Name="Name" Header="{Binding Vocabulary.Name, FallbackValue=Name}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding Name, Mode=TwoWay}" TextAlignment="Left" BorderThickness="0" Background="{x:Null}" IsEnabled="True" GotFocus="lvItem_GotFocus" KeyDown="lv_EnterPressed"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn x:Name="XScale" Header="{Binding Vocabulary.XScale, FallbackValue=XScale}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding XScale, Mode=TwoWay}" TextAlignment="Center" BorderThickness="0" Background="{x:Null}" IsEnabled="True" GotFocus="lvItem_GotFocus" KeyDown="lv_EnterPressed"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn x:Name="YScale" Header="{Binding Vocabulary.YScale, FallbackValue=YScale}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding YScale, Mode=TwoWay}" TextAlignment="Center" BorderThickness="0" Background="{x:Null}" IsEnabled="True" GotFocus="lvItem_GotFocus" KeyDown="lv_EnterPressed"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn x:Name="Thick" Header="{Binding Vocabulary.Thick, FallbackValue=Thick}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding Thick, Mode=TwoWay}" TextAlignment="Center" BorderThickness="0" Background="{x:Null}" IsEnabled="True" GotFocus="lvItem_GotFocus" KeyDown="lv_EnterPressed"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn x:Name="Style" Header="{Binding Vocabulary.Style, FallbackValue=Style}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ComboBox ItemsSource="{Binding AvailableLineStyles}" SelectedItem="{Binding LineStyle}" BorderThickness="0" GotFocus="lvItem_GotFocus"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn x:Name="Color" Header="{Binding Vocabulary.Color, FallbackValue=Color}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ComboBox ItemsSource="{Binding AvailableColors}" SelectedItem="{Binding Color}" IsEnabled="{Binding StandardColor}" BorderThickness="0" GotFocus="lvItem_GotFocus"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn x:Name="CustomColor" Header="{Binding Vocabulary.CustomColor, FallbackValue=CustomColor}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding CustomColor}" Content="" Background="{x:Null}" GotFocus="lvItem_GotFocus" HorizontalAlignment="Center"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn x:Name="RGB" Header="{Binding Vocabulary.RGB, FallbackValue=RGB}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding RGBDescription, Mode=TwoWay}" TextAlignment="Center" BorderThickness="0" Background="{x:Null}" IsEnabled="{Binding CustomColor}" GotFocus="lvItem_GotFocus" KeyDown="lv_EnterPressed"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn x:Name="Legend" Header="{Binding Vocabulary.Legend, FallbackValue=Legend}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding Legend}" Content="" Background="{x:Null}" GotFocus="lvItem_GotFocus" HorizontalAlignment="Center"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn x:Name="SecondY" Header="{Binding Vocabulary.SecondY, FallbackValue=SecondX}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding SecondY}" Content="" Background="{x:Null}" GotFocus="lvItem_GotFocus" HorizontalAlignment="Center"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <Button Command="{Binding RemoveDataSeries}" Content="{Binding Vocabulary.RemoveDataSeries, FallbackValue=RemoveDataSeries}" HorizontalAlignment="Left" Margin="5,190,0,0" VerticalAlignment="Top" Width="150" Height="23"/>
                            <Button Command="{Binding DataSeriesUp}" Content="{Binding Vocabulary.ArrowUp, FallbackValue=ArrowUp}" HorizontalAlignment="Left" Margin="165,190,0,0" VerticalAlignment="Top" Width="50" Height="23"/>
                            <Button Command="{Binding DataSeriesDown}" Content="{Binding Vocabulary.ArrowDown, FallbackValue=ArrowDown}" HorizontalAlignment="Left" Margin="225,190,0,0" VerticalAlignment="Top" Width="50" Height="23"/>
                            <ListView Margin="5,230,10,0" ItemsSource="{Binding SelectedDataSeriesPoints}" Height="130" VerticalAlignment="Top" Grid.ColumnSpan="2" d:ItemsSource="{d:SampleData ItemCount=3}">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}">
                                        <Setter Property="Height" Value="Auto"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn x:Name="OriginalX" Header="{Binding Vocabulary.OriginalX, FallbackValue=OriginalX}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding X, Mode=TwoWay}" TextAlignment="Center" BorderThickness="0" Background="{x:Null}" IsEnabled="True" GotFocus="lvItem_GotFocus" KeyDown="lv_EnterPressed"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn x:Name="OriginalY" Header="{Binding Vocabulary.OriginalY, FallbackValue=OriginalY}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding Y, Mode=TwoWay}" TextAlignment="Center" BorderThickness="0" Background="{x:Null}" IsEnabled="True" GotFocus="lvItem_GotFocus" KeyDown="lv_EnterPressed"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn x:Name="ScaledX" Header="{Binding Vocabulary.ScaledX, FallbackValue=ScaledX}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding ScaledX}" TextAlignment="Center" BorderThickness="0" Background="{x:Null}" IsReadOnly="True" GotFocus="lvItem_GotFocus" KeyDown="lv_EnterPressed"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn x:Name="ScaledY" Header="{Binding Vocabulary.ScaledY, FallbackValue=ScaledY}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Text="{Binding ScaledY}" TextAlignment="Center" BorderThickness="0" Background="{x:Null}" IsReadOnly="True" GotFocus="lvItem_GotFocus" KeyDown="lv_EnterPressed"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <Label Content="{Binding Vocabulary.ColorTemplate, FallbackValue=ColorTemplate}" Margin="10,370,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <ComboBox ItemsSource="{Binding AvailableColorTemplates}" SelectedItem="{Binding SelectedColorTemplate}" Margin="240,370,80,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <Button Command="{Binding ApplyColorTemplate}" Content="{Binding Vocabulary.Apply, FallbackValue=Apply}" Margin="450,370,20,0" VerticalAlignment="Top" Height="23"/>
                        </Grid>
                    </Expander>
                    <Expander Name="ExpdAxisConfiguration" Margin="10,10,10,10" Grid.Row="1" BorderBrush="DarkGray" IsExpanded="False">
                        <Expander.Header>
                            <DockPanel Width="495" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}, Mode=FindAncestor}}">
                                <DockPanel.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="DarkGray" Offset="1"/>
                                        <GradientStop Color="LightGray"/>
                                    </LinearGradientBrush>
                                </DockPanel.Background>
                                <TextBlock Name="txtAxisConfiguration" Text="{Binding Vocabulary.AxisConfiguration, FallbackValue=AxisConfiguration}" FontWeight="Bold" HorizontalAlignment="Center"/>
                            </DockPanel>
                        </Expander.Header>
                        <Grid Height="250">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="240"/>
                                <ColumnDefinition Width="280"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding Vocabulary.XLimits, FallbackValue=XLimits}" Margin="10,10,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <Label Content="{Binding Vocabulary.YLimits, FallbackValue=YLimits}" Margin="10,40,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <Label Content="{Binding Vocabulary.Y2Limits, FallbackValue=Y2Limits}" Margin="10,70,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <Label Content="{Binding Vocabulary.XAxisTitle, FallbackValue=XAxisTitle}" Margin="10,100,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <Label Content="{Binding Vocabulary.YAxisTitle, FallbackValue=YAxisTitle}" Margin="10,130,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <Label Content="{Binding Vocabulary.Y2AxisTitle, FallbackValue=Y2AxisTitle}" Margin="10,160,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <Label Content="{Binding Vocabulary.LogarithmicScale, FallbackValue=LogarithmicScale}" Margin="10,190,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <Label Content="{Binding Vocabulary.AxisLabelsStyle, FallbackValue=AxisLabelsStyle}" Margin="10,220,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <CheckBox IsChecked="{Binding ManualXMinAxisLimit}" Margin="3,13,262,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <TextBox Text="{Binding XAxisMin, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding ManualXMinAxisLimit}" Margin="20,10,210,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <CheckBox IsChecked="{Binding ManualXMaxAxisLimit}" Margin="93,13,172,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <TextBox Text="{Binding XAxisMax, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding ManualXMaxAxisLimit}" Margin="110,10,120,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <CheckBox IsChecked="{Binding ManualYMinAxisLimit}" Margin="3,43,262,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <TextBox Text="{Binding YAxisMin, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding ManualYMinAxisLimit}" Margin="20,40,210,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <CheckBox IsChecked="{Binding ManualYMaxAxisLimit}" Margin="93,43,172,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <TextBox Text="{Binding YAxisMax, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding ManualYMaxAxisLimit}" Margin="110,40,120,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <CheckBox IsChecked="{Binding ManualY2MinAxisLimit}" IsEnabled="{Binding HasSecondYAxis}" Margin="3,73,262,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <TextBox Text="{Binding Y2AxisMin, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding ManualY2MinAxisLimit}" Margin="20,70,210,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <CheckBox IsChecked="{Binding ManualY2MaxAxisLimit}" IsEnabled="{Binding HasSecondYAxis}" Margin="93,73,172,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <TextBox Text="{Binding Y2AxisMax, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding ManualY2MaxAxisLimit}" Margin="110,70,120,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <TextBox Text="{Binding XAxisTitle, UpdateSourceTrigger=LostFocus}" Margin="20,100,20,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <TextBox Text="{Binding YAxisTitle, UpdateSourceTrigger=LostFocus}" Margin="20,130,20,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <TextBox Text="{Binding Y2AxisTitle, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding HasSecondYAxis}" Margin="20,160,20,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <CheckBox IsChecked="{Binding XLogarithmicScale}" Content="X" Margin="20,190,20,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <CheckBox IsChecked="{Binding YLogarithmicScale}" Content="Y" Margin="100,190,20,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <CheckBox IsChecked="{Binding Y2LogarithmicScale}" IsEnabled="{Binding HasSecondYAxis}" Content="Y2" Margin="180,190,20,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <ComboBox ItemsSource="{Binding AvailableAxisLabelFormats}" SelectedItem="{Binding SelectedXAxisLabelFormat}" Margin="20,220,180,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <ComboBox ItemsSource="{Binding AvailableAxisLabelFormats}" SelectedItem="{Binding SelectedYAxisLabelFormat}" Margin="100,220,100,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <ComboBox ItemsSource="{Binding AvailableAxisLabelFormats}" SelectedItem="{Binding SelectedY2AxisLabelFormat}" IsEnabled="{Binding HasSecondYAxis}" Margin="180,220,20,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                        </Grid>
                    </Expander>
                    <Expander Name="ExpdGridLines" Margin="10,10,10,10" Grid.Row="2" BorderBrush="DarkGray" IsExpanded="False">
                        <Expander.Header>
                            <DockPanel Width="495" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}, Mode=FindAncestor}}">
                                <DockPanel.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="DarkGray" Offset="1"/>
                                        <GradientStop Color="LightGray"/>
                                    </LinearGradientBrush>
                                </DockPanel.Background>
                                <TextBlock Name="txtGridLines" Text="{Binding Vocabulary.GridLines, FallbackValue=GridLines}" FontWeight="Bold" HorizontalAlignment="Center"/>
                            </DockPanel>
                        </Expander.Header>
                        <Grid Height="130">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="240"/>
                                <ColumnDefinition Width="280"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding Vocabulary.MajorGridLines, FallbackValue=MajorGridLines}" Margin="10,10,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <Label Content="{Binding Vocabulary.MinorGridLines, FallbackValue=MinorGridLines}" Margin="10,40,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <Label Content="{Binding Vocabulary.MajorStep, FallbackValue=MajorStep}" Margin="10,70,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <Label Content="{Binding Vocabulary.MinorStep, FallbackValue=MinorStep}" Margin="10,100,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <CheckBox IsChecked="{Binding XMajorGridLines}" Content="X" Margin="20,13,20,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <CheckBox IsChecked="{Binding YMajorGridLines}" Content="Y" Margin="110,13,20,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <CheckBox IsChecked="{Binding Y2MajorGridLines}" IsEnabled="{Binding HasSecondYAxis}" Content="Y2" Margin="200,13,20,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <CheckBox IsChecked="{Binding XMinorGridLines}" Content="X" Margin="20,43,20,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <CheckBox IsChecked="{Binding YMinorGridLines}" Content="Y" Margin="110,43,20,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <CheckBox IsChecked="{Binding Y2MinorGridLines}" IsEnabled="{Binding HasSecondYAxis}" Content="Y2" Margin="200,43,20,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <TextBox Text="{Binding XMajorStep, UpdateSourceTrigger=LostFocus}" Margin="20,70,200,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <TextBox Text="{Binding YMajorStep, UpdateSourceTrigger=LostFocus}" Margin="110,70,110,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <TextBox Text="{Binding Y2MajorStep, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding HasSecondYAxis}" Margin="200,70,20,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <TextBox Text="{Binding XMinorStep, UpdateSourceTrigger=LostFocus}" Margin="20,100,200,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <TextBox Text="{Binding YMinorStep, UpdateSourceTrigger=LostFocus}" Margin="110,100,110,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <TextBox Text="{Binding Y2MinorStep, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding HasSecondYAxis}" Margin="200,100,20,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                        </Grid>
                    </Expander>
                    <Expander Name="ExpdChartBox" Margin="10,10,10,10" Grid.Row="3" BorderBrush="DarkGray" IsExpanded="False">
                        <Expander.Header>
                            <DockPanel Width="495" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}, Mode=FindAncestor}}">
                                <DockPanel.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="DarkGray" Offset="1"/>
                                        <GradientStop Color="LightGray"/>
                                    </LinearGradientBrush>
                                </DockPanel.Background>
                                <TextBlock Name="txtChartBox" Text="{Binding Vocabulary.ChartBox, FallbackValue=ChartBox}" FontWeight="Bold" HorizontalAlignment="Center"/>
                            </DockPanel>
                        </Expander.Header>
                        <Grid Height="160">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="240"/>
                                <ColumnDefinition Width="280"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding Vocabulary.ChartSize, FallbackValue=ChartSize}" Margin="10,10,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <Label Content="{Binding Vocabulary.ChartTitle, FallbackValue=ChartTitle}" Margin="10,40,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <Label Content="{Binding Vocabulary.ShowLegend, FallbackValue=ShowLegend}" Margin="10,70,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <Label Content="{Binding Vocabulary.LegendPosition, FallbackValue=LegendPosition}" Margin="10,100,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <Label Content="{Binding Vocabulary.ShowLegendArrows, FallbackValue=ShowLegendArrows}" Margin="10,130,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <TextBox Text="{Binding ChartWidth, UpdateSourceTrigger=LostFocus}" Margin="20,10,200,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <TextBox Text="{Binding ChartHeight, UpdateSourceTrigger=LostFocus}" Margin="110,10,110,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <TextBox Text="{Binding ChartTitle, UpdateSourceTrigger=LostFocus}" Margin="20,40,20,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <CheckBox IsChecked="{Binding ShowLegend}" Margin="20,73,20,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <ComboBox ItemsSource="{Binding AvailableLegendPositions}" SelectedItem="{Binding SelectedLegendPosition}" Margin="20,100,20,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <CheckBox IsChecked="{Binding ShowLegendArrows}" Margin="20,133,20,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                        </Grid>
                    </Expander>
                    <Expander Name="ExpdChartFontStyle" Margin="10,10,10,10" Grid.Row="4" BorderBrush="DarkGray" IsExpanded="False">
                        <Expander.Header>
                            <DockPanel Width="495" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}, Mode=FindAncestor}}">
                                <DockPanel.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="DarkGray" Offset="1"/>
                                        <GradientStop Color="LightGray"/>
                                    </LinearGradientBrush>
                                </DockPanel.Background>
                                <TextBlock Name="txtFontStyle" Text="{Binding Vocabulary.FontStyle, FallbackValue=FontStyle}" FontWeight="Bold" HorizontalAlignment="Center"/>
                            </DockPanel>
                        </Expander.Header>
                        <Grid Height="130">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="240"/>
                                <ColumnDefinition Width="280"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding Vocabulary.FontName, FallbackValue=FontName}" Margin="10,10,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <Label Content="{Binding Vocabulary.AxisFontSize, FallbackValue=AxisFontSize}" Margin="10,40,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <Label Content="{Binding Vocabulary.TitleFontSize, FallbackValue=TitleFontSize}" Margin="10,70,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <Label Content="{Binding Vocabulary.LegendFontSize, FallbackValue=LegendFontSize}" Margin="10,100,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <ComboBox ItemsSource="{Binding AvailableFonts}" SelectedItem="{Binding SelectedFont}" Margin="20,10,20,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <TextBox Text="{Binding XAxisFontSize, UpdateSourceTrigger=LostFocus}" Margin="20,40,200,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <TextBox Text="{Binding YAxisFontSize, UpdateSourceTrigger=LostFocus}" Margin="110,40,110,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <TextBox Text="{Binding Y2AxisFontSize, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding HasSecondYAxis}" Margin="200,40,20,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <TextBox Text="{Binding TitleFontSize, UpdateSourceTrigger=LostFocus}" Margin="20,70,200,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <TextBox Text="{Binding LegendFontSize, UpdateSourceTrigger=LostFocus}" Margin="20,100,200,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                        </Grid>
                    </Expander>
                    <Expander Name="ExpdColors" Margin="10,10,10,10" Grid.Row="5" BorderBrush="DarkGray" IsExpanded="False">
                        <Expander.Header>
                            <DockPanel Width="495" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}, Mode=FindAncestor}}">
                                <DockPanel.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="DarkGray" Offset="1"/>
                                        <GradientStop Color="LightGray"/>
                                    </LinearGradientBrush>
                                </DockPanel.Background>
                                <TextBlock Name="txtColors" Text="{Binding Vocabulary.Colors, FallbackValue=Colors}" FontWeight="Bold" HorizontalAlignment="Center"/>
                            </DockPanel>
                        </Expander.Header>
                        <Grid Height="100">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="240"/>
                                <ColumnDefinition Width="280"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding Vocabulary.BackColor, FallbackValue=BackColor}" Margin="10,10,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <ComboBox ItemsSource="{Binding AvailableColors}" SelectedItem="{Binding SelectedBackColor}" IsEnabled="{Binding StandardBackColor}" Margin="20,10,150,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <CheckBox IsChecked="{Binding CustomBackColor}" Margin="160,13,20,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <TextBox Text="{Binding BackColorRGBDescription, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding CustomBackColor}" Margin="180,10,20,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <Label Content="{Binding Vocabulary.BackgroundColor, FallbackValue=BackgroundColor}" Margin="10,40,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <ComboBox ItemsSource="{Binding AvailableColors}" SelectedItem="{Binding SelectedBackgroundColor}" IsEnabled="{Binding StandardBackgroundColor}" Margin="20,40,150,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <CheckBox IsChecked="{Binding CustomBackgroundColor}" Margin="160,43,20,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <TextBox Text="{Binding BackgroundColorRGBDescription, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding CustomBackgroundColor}" Margin="180,40,20,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <Label Content="{Binding Vocabulary.GridLinesColor, FallbackValue=GridLinesColor}" Margin="10,70,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <ComboBox ItemsSource="{Binding AvailableColors}" SelectedItem="{Binding SelectedGridLinesColor}" IsEnabled="{Binding StandardGridLinesColor}" Margin="20,70,150,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <CheckBox IsChecked="{Binding CustomGridLinesColor}" Margin="160,73,20,0" VerticalAlignment="Top" Grid.Column="1" Height="15"/>
                            <TextBox Text="{Binding GridLinesColorRGBDescription, UpdateSourceTrigger=LostFocus}" IsEnabled="{Binding CustomGridLinesColor}" Margin="180,70,20,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                        </Grid>
                    </Expander>
                    <Expander Name="ExpdCreateGIF" Margin="10,10,10,10" Grid.Row="6" BorderBrush="DarkGray" IsExpanded="False">
                        <Expander.Header>
                            <DockPanel Width="495" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}, Mode=FindAncestor}}">
                                <DockPanel.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="DarkGray" Offset="1"/>
                                        <GradientStop Color="LightGray"/>
                                    </LinearGradientBrush>
                                </DockPanel.Background>
                                <TextBlock Name="txtCreateGIF" Text="{Binding Vocabulary.CreateGIF, FallbackValue=CreateGIF}" FontWeight="Bold" HorizontalAlignment="Center"/>
                            </DockPanel>
                        </Expander.Header>
                        <Grid Height="100">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="220"/>
                                <ColumnDefinition Width="300"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding Vocabulary.TotalTime, FallbackValue=TotalTime}" Margin="10,10,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <Label Content="{Binding Vocabulary.FramesPerSecond, FallbackValue=FramesPerSecond}" Margin="10,40,10,0" VerticalAlignment="Top" Grid.Column="0"/>
                            <TextBox Text="{Binding GIFTotalTime, UpdateSourceTrigger=LostFocus}" Margin="20,10,210,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <TextBox Text="{Binding GIFFramesPerSecond, UpdateSourceTrigger=LostFocus}" Margin="20,40,210,0" VerticalAlignment="Top" Grid.Column="1" Height="23"/>
                            <Button Content="{Binding Vocabulary.CreateGIF, FallbackValue=CreateGIF}" Command="{Binding CreateGIF}" Margin="20,70,210,0" VerticalAlignment="Top" Grid.Column="1" />
                        </Grid>
                    </Expander>
                </Grid>
            </ScrollViewer>
        </Expander>
        <Grid Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button Content="{Binding Vocabulary.RefreshPlot, FallbackValue=RefreshPlot}" Command="{Binding RefreshPlot}" HorizontalAlignment="Left" Margin="5,0,5,0" VerticalAlignment="Center" Grid.Column="0"/>
        </Grid>
        <Grid Name="PlotRef1" Grid.Column="1" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left" Width="{Binding ChartWidth}" Height="{Binding ChartHeight}"/>
        <Grid Name="PlotRef2" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
        <Grid Name="PlotGrid" Grid.Column="1" Grid.Row="1">
            <Grid.Resources>
                <local:MaxSizeConverter x:Key="MaxSizeConverter"></local:MaxSizeConverter>
            </Grid.Resources>
            <oxy:PlotView Name="Plot" Model="{Binding PlotObj}" Margin="0,0,0,0">
                <oxy:PlotView.Width>
                    <MultiBinding Converter="{StaticResourceExtension MaxSizeConverter}">
                        <Binding ElementName="PlotRef1" Path="Width"/>
                        <Binding ElementName="PlotRef2" Path="ActualWidth" />
                    </MultiBinding>
                </oxy:PlotView.Width>
                <oxy:PlotView.Height>
                    <MultiBinding Converter="{StaticResourceExtension MaxSizeConverter}">
                        <Binding ElementName="PlotRef1" Path="Height"/>
                        <Binding ElementName="PlotRef2" Path="ActualHeight" />
                    </MultiBinding>
                </oxy:PlotView.Height>
            </oxy:PlotView>
        </Grid>
    </Grid>
</Window>
